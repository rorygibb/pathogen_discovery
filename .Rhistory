predx_bru1 = predict(bru_mod, x4pred, ~ exp(x + Intercept), n.samples=2000)
daty = left_join(datx, predx_bru1)
ggplot() +
geom_point(data = daty, aes(Year, Discovered), size=1, col="grey70", alpha=0.8) +
geom_line(data = daty, aes(Year, median)) +
geom_ribbon(data = daty, aes(Year, ymin=q0.025, ymax=q0.975), fill="skyblue4", alpha=0.25) +
theme_minimal() +
ggtitle(Hmisc::capitalize(daty$Host[1])) +
ylab(expression(lambda)) +
xlab("Year") +
theme(plot.title=element_text(size=14, hjust=0.5),
axis.title.y = element_text(size=14),
axis.title.x = element_text(size=12),
axis.text = element_text(size=11))
datx = curves[ curves$Year <= 2015, ]
# -------------- 1. fit model with spde acoss years ----------------
# fit in INLABRU with spde
mesh_points = seq(0, nrow(datx), length = nrow(datx))
mesh1D = inla.mesh.1d(mesh_points, boundary = "free")
ggplot() + gg(mesh1D)
# set up spde
spde = inla.spde2.pcmatern(mesh1D,
prior.range=c(1, 0.01),
prior.sigma=c(10, 0.01))
# model
datx$x = 1:nrow(datx)
form = Discovered ~ field(map = x, model = spde) + Intercept
bru_mod = bru(form, datx, family = "poisson")
summary(bru_mod)
# plot posterior range
post.range = spde.posterior(bru_count, name="field", what="range"); plot(post.range)
# predict field for each year
x4pred = data.frame(x = 1:nrow(datx))
predx_bru1 = predict(bru_mod, x4pred, x ~ exp(field + Intercept), n.samples=1000)
daty = left_join(datx, predx_bru1)
head(datx)
datx = curves[ curves$Year <= 2015, ]
head(datx)
datx = curves[ curves$Year <= 2015 & curves$Host %in% unique(curves$Host)[1:250], ]
# fit in INLABRU with spde
mesh_points = seq(0, nrow(datx), length = 0.8 * n_distinct(Year))
# fit in INLABRU with spde
mesh_points = seq(0, nrow(datx), length = 0.8 * n_distinct(curves$Year))
mesh_points
n_distinct(curves$Year)
# fit in INLABRU with spde
mesh_points = seq(0, n_distinct(curves$Year), length = 0.8 * n_distinct(curves$Year))
mesh1D = inla.mesh.1d(mesh_points, boundary = "free")
ggplot() + gg(mesh1D)
# set up spde
spde = inla.spde2.pcmatern(mesh1D,
prior.range=c(1, 0.01),
prior.sigma=c(10, 0.01))
datx = curves[ curves$Year <= 2015 & curves$Host %in% unique(curves$Host)[1:250], ]
# fit in INLABRU with spde
mesh_points = seq(0, n_distinct(datx$Year), length = 0.8 * n_distinct(datx$Year))
mesh1D = inla.mesh.1d(mesh_points, boundary = "free")
ggplot() + gg(mesh1D)
# set up spde
spde = inla.spde2.pcmatern(mesh1D,
prior.range=c(1, 0.01),
prior.sigma=c(10, 0.01))
# model
datx$x = rep(1:n_distinct(datx$Year), each=n_distinct(datx$Host))
head(datx)
# model
datx$x = rep(1:n_distinct(datx$Year), n_distinct(datx$Host))
head(datx)
datx = curves[ curves$Year <= 2015 & curves$Host %in% unique(curves$Host)[1:250] & curves$Host != "homo sapiens", ]
# fit in INLABRU with spde
mesh_points = seq(0, n_distinct(datx$Year), length = 0.8 * n_distinct(datx$Year))
mesh1D = inla.mesh.1d(mesh_points, boundary = "free")
ggplot() + gg(mesh1D)
# set up spde
spde = inla.spde2.pcmatern(mesh1D,
prior.range=c(1, 0.01),
prior.sigma=c(10, 0.01))
# model
datx$x = rep(1:n_distinct(datx$Year), n_distinct(datx$Host))
head(datx)
form = Discovered ~ field(map = x, model = spde) + Intercept
bru_mod = bru(form, datx, family = "poisson")
# species
spp = "capra hircus"
datx = curves[ curves$Host == spp & curves$Year <= 2015, ]
#datx = curves[ curves$Year <= 2015 & curves$Host %in% unique(curves$Host)[1:250] & curves$Host != "homo sapiens", ]
# -------------- 1. fit model with spde acoss years ----------------
# fit in INLABRU with spde
mesh_points = seq(0, n_distinct(datx$Year), length = 0.8 * n_distinct(datx$Year))
mesh1D = inla.mesh.1d(mesh_points, boundary = "free")
ggplot() + gg(mesh1D)
# set up spde
spde = inla.spde2.pcmatern(mesh1D,
prior.range=c(1, 0.01),
prior.sigma=c(10, 0.01))
# model
datx$x = rep(1:n_distinct(datx$Year), n_distinct(datx$Host))
datx
form = Discovered ~ field(map = x, model = spde) + Intercept
bru_mod = bru(form, datx, family = "poisson")
summary(bru_mod)
# plot posterior range
post.range = spde.posterior(bru_count, name="field", what="range"); plot(post.range)
# plot posterior range
post.range = spde.posterior(bru_mod, name="field", what="range"); plot(post.range)
# predict field for each year
x4pred = data.frame(x = 1:nrow(datx))
predx_bru1 = predict(bru_mod, x4pred, x ~ exp(field + Intercept), n.samples=1000)
daty = left_join(datx, predx_bru1)
# plot
ggplot() +
geom_point(data = daty, aes(Year, Discovered), size=1, col="grey70", alpha=0.8) +
geom_line(data = daty, aes(Year, median)) +
geom_ribbon(data = daty, aes(Year, ymin=q0.025, ymax=q0.975), fill="skyblue4", alpha=0.25) +
theme_minimal() +
ggtitle(Hmisc::capitalize(daty$Host[1])) +
ylab(expression(lambda)) +
xlab("Year") +
theme(plot.title=element_text(size=14, hjust=0.5),
axis.title.y = element_text(size=14),
axis.title.x = element_text(size=12),
axis.text = element_text(size=11))
# ================ fit poisson count model in INLABRU =================
# species
spp = "bos taurus"
datx = curves[ curves$Host == spp & curves$Year <= 2015, ]
#datx = curves[ curves$Year <= 2015 & curves$Host %in% unique(curves$Host)[1:250] & curves$Host != "homo sapiens", ]
# -------------- 1. fit model with spde acoss years ----------------
# fit in INLABRU with spde
mesh_points = seq(0, n_distinct(datx$Year), length = 0.8 * n_distinct(datx$Year))
mesh1D = inla.mesh.1d(mesh_points, boundary = "free")
ggplot() + gg(mesh1D)
# set up spde
spde = inla.spde2.pcmatern(mesh1D,
prior.range=c(1, 0.01),
prior.sigma=c(10, 0.01))
# model
datx$x = rep(1:n_distinct(datx$Year), n_distinct(datx$Host))
form = Discovered ~ field(map = x, model = spde) + Intercept
bru_mod = bru(form, datx, family = "poisson")
summary(bru_mod)
# plot posterior range
post.range = spde.posterior(bru_mod, name="field", what="range"); plot(post.range)
# predict field for each year
x4pred = data.frame(x = 1:nrow(datx))
predx_bru1 = predict(bru_mod, x4pred, x ~ exp(field + Intercept), n.samples=1000)
daty = left_join(datx, predx_bru1)
# plot
ggplot() +
geom_point(data = daty, aes(Year, Discovered), size=1, col="grey70", alpha=0.8) +
geom_line(data = daty, aes(Year, median)) +
geom_ribbon(data = daty, aes(Year, ymin=q0.025, ymax=q0.975), fill="skyblue4", alpha=0.25) +
theme_minimal() +
ggtitle(Hmisc::capitalize(daty$Host[1])) +
ylab(expression(lambda)) +
xlab("Year") +
theme(plot.title=element_text(size=14, hjust=0.5),
axis.title.y = element_text(size=14),
axis.title.x = element_text(size=12),
axis.text = element_text(size=11))
# -------------- 2. fit model assuming a poisson process (i.e. independent events) -------------------
# formula: linear effect of year + intercept
datx$x = 1:nrow(datx)
form = Discovered ~ x + Intercept
bru_mod = bru(form, datx, family = "poisson")
summary(bru_mod)
# predict field for each year
x4pred = data.frame(x = 1:nrow(datx))
predx_bru1 = predict(bru_mod, x4pred, ~ exp(x + Intercept), n.samples=2000)
daty = left_join(datx, predx_bru1)
ggplot() +
geom_point(data = daty, aes(Year, Discovered), size=1, col="grey70", alpha=0.8) +
geom_line(data = daty, aes(Year, median)) +
geom_ribbon(data = daty, aes(Year, ymin=q0.025, ymax=q0.975), fill="skyblue4", alpha=0.25) +
theme_minimal() +
ggtitle(Hmisc::capitalize(daty$Host[1])) +
ylab(expression(lambda)) +
xlab("Year") +
theme(plot.title=element_text(size=14, hjust=0.5),
axis.title.y = element_text(size=14),
axis.title.x = element_text(size=12),
axis.text = element_text(size=11))
# formula: linear effect of year + intercept > 1995
datx = datx[ datx$Year >= 1995 ,]
datx$x = 1:nrow(datx)
form = Discovered ~ x + Intercept
bru_mod = bru(form, datx, family = "poisson")
summary(bru_mod)
# predict field for each year
x4pred = data.frame(x = 1:nrow(datx))
predx_bru1 = predict(bru_mod, x4pred, ~ exp(x + Intercept), n.samples=2000)
daty = left_join(datx, predx_bru1)
ggplot() +
geom_point(data = daty, aes(Year, Discovered), size=1, col="grey70", alpha=0.8) +
geom_line(data = daty, aes(Year, median)) +
geom_ribbon(data = daty, aes(Year, ymin=q0.025, ymax=q0.975), fill="skyblue4", alpha=0.25) +
theme_minimal() +
ggtitle(Hmisc::capitalize(daty$Host[1])) +
ylab(expression(lambda)) +
xlab("Year") +
theme(plot.title=element_text(size=14, hjust=0.5),
axis.title.y = element_text(size=14),
axis.title.x = element_text(size=12),
axis.text = element_text(size=11))
ggplot() +
geom_point(data = daty, aes(Year, Discovered), size=1, col="grey70", alpha=0.8) +
geom_line(data = daty, aes(Year, median)) +
geom_ribbon(data = daty, aes(Year, ymin=q0.025, ymax=q0.975), fill="skyblue4", alpha=0.25) +
theme_minimal() +
ggtitle(Hmisc::capitalize(daty$Host[1])) +
ylab("Number of viruses discovered") +
xlab("Year") +
theme(plot.title=element_text(size=14, hjust=0.5),
axis.title.y = element_text(size=14),
axis.title.x = element_text(size=12),
axis.text = element_text(size=11))
ggplot() +
geom_point(data = daty, aes(Year, Discovered), size=1, col="grey70", alpha=0.8) +
geom_line(data = daty, aes(Year, median)) +
geom_ribbon(data = daty, aes(Year, ymin=q0.025, ymax=q0.975), fill="skyblue4", alpha=0.25) +
theme_minimal() +
ggtitle(Hmisc::capitalize(daty$Host[1])) +
ylab("Number of viruses discovered (", expression(lambda), ")") +
xlab("Year") +
theme(plot.title=element_text(size=14, hjust=0.5),
axis.title.y = element_text(size=14),
axis.title.x = element_text(size=12),
axis.text = element_text(size=11))
ggplot() +
geom_point(data = daty, aes(Year, Discovered), size=1, col="grey70", alpha=0.8) +
geom_line(data = daty, aes(Year, median)) +
geom_ribbon(data = daty, aes(Year, ymin=q0.025, ymax=q0.975), fill="skyblue4", alpha=0.25) +
theme_minimal() +
ggtitle(Hmisc::capitalize(daty$Host[1])) +
ylab(paste("Number of viruses discovered (", expression(lambda), ")")) +
xlab("Year") +
theme(plot.title=element_text(size=14, hjust=0.5),
axis.title.y = element_text(size=14),
axis.title.x = element_text(size=12),
axis.text = element_text(size=11))
ggplot() +
geom_point(data = daty, aes(Year, Discovered), size=1, col="grey70", alpha=0.8) +
geom_line(data = daty, aes(Year, median)) +
geom_ribbon(data = daty, aes(Year, ymin=q0.025, ymax=q0.975), fill="skyblue4", alpha=0.25) +
theme_minimal() +
ggtitle(Hmisc::capitalize(daty$Host[1])) +
ylab("Number of viruses discovered") +
xlab("Year") +
theme(plot.title=element_text(size=14, hjust=0.5),
axis.title.y = element_text(size=14),
axis.title.x = element_text(size=12),
axis.text = element_text(size=11))
ggplot() +
geom_point(data = daty, aes(Year, Discovered), size=1, col="grey70", alpha=0.8) +
geom_line(data = daty, aes(Year, median)) +
geom_ribbon(data = daty, aes(Year, ymin=q0.025, ymax=q0.975), fill="skyblue4", alpha=0.25) +
theme_minimal() +
ggtitle(Hmisc::capitalize(daty$Host[1])) +
#ylab("Number of viruses discovered") +
ylab(expression(lambda)) +
xlab("Year") +
theme(plot.title=element_text(size=14, hjust=0.5),
axis.title.y = element_text(size=14),
axis.title.x = element_text(size=12),
axis.text = element_text(size=11))
# formula: linear effect of year + intercept
datx$x = 1:nrow(datx)
form = Discovered ~ x + Intercept
bru_mod = bru(form, datx, family = "poisson")
summary(bru_mod)
# predict field for each year
x4pred = data.frame(x = 1:nrow(datx))
predx_bru1 = predict(bru_mod, x4pred, ~ exp(x + Intercept), n.samples=2000)
daty = left_join(datx, predx_bru1)
ggplot() +
geom_point(data = daty, aes(Year, Discovered), size=1, col="grey70", alpha=0.8) +
geom_line(data = daty, aes(Year, median)) +
geom_ribbon(data = daty, aes(Year, ymin=q0.025, ymax=q0.975), fill="skyblue4", alpha=0.25) +
theme_minimal() +
ggtitle(Hmisc::capitalize(daty$Host[1])) +
ylab(expression(lambda)) +
xlab("Year") +
theme(plot.title=element_text(size=14, hjust=0.5),
axis.title.y = element_text(size=14),
axis.title.x = element_text(size=12),
axis.text = element_text(size=11))
unique(curves$Host)
# species
spp = "urocyon cinereoargenteus"
datx = curves[ curves$Host == spp & curves$Year <= 2015, ]
# formula: linear effect of year + intercept
datx$x = 1:nrow(datx)
form = Discovered ~ x + Intercept
bru_mod = bru(form, datx, family = "poisson")
summary(bru_mod)
# predict field for each year
x4pred = data.frame(x = 1:nrow(datx))
predx_bru1 = predict(bru_mod, x4pred, ~ exp(x + Intercept), n.samples=2000)
daty = left_join(datx, predx_bru1)
ggplot() +
geom_point(data = daty, aes(Year, Discovered), size=1, col="grey70", alpha=0.8) +
geom_line(data = daty, aes(Year, median)) +
geom_ribbon(data = daty, aes(Year, ymin=q0.025, ymax=q0.975), fill="skyblue4", alpha=0.25) +
theme_minimal() +
ggtitle(Hmisc::capitalize(daty$Host[1])) +
ylab(expression(lambda)) +
xlab("Year") +
theme(plot.title=element_text(size=14, hjust=0.5),
axis.title.y = element_text(size=14),
axis.title.x = element_text(size=12),
axis.text = element_text(size=11))
# formula: linear effect of year + intercept > 1995
datx = datx[ datx$Year >= 1995 ,]
datx$x = 1:nrow(datx)
form = Discovered ~ x + Intercept
bru_mod = bru(form, datx, family = "poisson")
summary(bru_mod)
# predict field for each year
x4pred = data.frame(x = 1:nrow(datx))
predx_bru1 = predict(bru_mod, x4pred, ~ exp(x + Intercept), n.samples=2000)
daty = left_join(datx, predx_bru1)
ggplot() +
geom_point(data = daty, aes(Year, Discovered), size=1, col="grey70", alpha=0.8) +
geom_line(data = daty, aes(Year, median)) +
geom_ribbon(data = daty, aes(Year, ymin=q0.025, ymax=q0.975), fill="skyblue4", alpha=0.25) +
theme_minimal() +
ggtitle(Hmisc::capitalize(daty$Host[1])) +
#ylab("Number of viruses discovered") +
ylab(expression(lambda)) +
xlab("Year") +
theme(plot.title=element_text(size=14, hjust=0.5),
axis.title.y = element_text(size=14),
axis.title.x = element_text(size=12),
axis.text = element_text(size=11))
# species
spp = "pongo pygmaeus"
datx = curves[ curves$Host == spp & curves$Year <= 2015, ]
# formula: linear effect of year + intercept
datx$x = 1:nrow(datx)
form = Discovered ~ x + Intercept
bru_mod = bru(form, datx, family = "poisson")
summary(bru_mod)
# predict field for each year
x4pred = data.frame(x = 1:nrow(datx))
predx_bru1 = predict(bru_mod, x4pred, ~ exp(x + Intercept), n.samples=2000)
daty = left_join(datx, predx_bru1)
ggplot() +
geom_point(data = daty, aes(Year, Discovered), size=1, col="grey70", alpha=0.8) +
geom_line(data = daty, aes(Year, median)) +
geom_ribbon(data = daty, aes(Year, ymin=q0.025, ymax=q0.975), fill="skyblue4", alpha=0.25) +
theme_minimal() +
ggtitle(Hmisc::capitalize(daty$Host[1])) +
ylab(expression(lambda)) +
xlab("Year") +
theme(plot.title=element_text(size=14, hjust=0.5),
axis.title.y = element_text(size=14),
axis.title.x = element_text(size=12),
axis.text = element_text(size=11))
# formula: linear effect of year + intercept > 1995
datx = datx[ datx$Year >= 1995 ,]
datx$x = 1:nrow(datx)
form = Discovered ~ x + Intercept
bru_mod = bru(form, datx, family = "poisson")
summary(bru_mod)
# predict field for each year
x4pred = data.frame(x = 1:nrow(datx))
predx_bru1 = predict(bru_mod, x4pred, ~ exp(x + Intercept), n.samples=2000)
daty = left_join(datx, predx_bru1)
ggplot() +
geom_point(data = daty, aes(Year, Discovered), size=1, col="grey70", alpha=0.8) +
geom_line(data = daty, aes(Year, median)) +
geom_ribbon(data = daty, aes(Year, ymin=q0.025, ymax=q0.975), fill="skyblue4", alpha=0.25) +
theme_minimal() +
ggtitle(Hmisc::capitalize(daty$Host[1])) +
#ylab("Number of viruses discovered") +
ylab(expression(lambda)) +
xlab("Year") +
theme(plot.title=element_text(size=14, hjust=0.5),
axis.title.y = element_text(size=14),
axis.title.x = element_text(size=12),
axis.text = element_text(size=11))
# species
spp = "pan troglodytes"
datx = curves[ curves$Host == spp & curves$Year <= 2015, ]
# formula: linear effect of year + intercept
datx$x = 1:nrow(datx)
form = Discovered ~ x + Intercept
bru_mod = bru(form, datx, family = "poisson")
summary(bru_mod)
# predict field for each year
x4pred = data.frame(x = 1:nrow(datx))
predx_bru1 = predict(bru_mod, x4pred, ~ exp(x + Intercept), n.samples=2000)
daty = left_join(datx, predx_bru1)
ggplot() +
geom_point(data = daty, aes(Year, Discovered), size=1, col="grey70", alpha=0.8) +
geom_line(data = daty, aes(Year, median)) +
geom_ribbon(data = daty, aes(Year, ymin=q0.025, ymax=q0.975), fill="skyblue4", alpha=0.25) +
theme_minimal() +
ggtitle(Hmisc::capitalize(daty$Host[1])) +
ylab(expression(lambda)) +
xlab("Year") +
theme(plot.title=element_text(size=14, hjust=0.5),
axis.title.y = element_text(size=14),
axis.title.x = element_text(size=12),
axis.text = element_text(size=11))
# formula: linear effect of year + intercept > 1995
datx = datx[ datx$Year >= 1995 ,]
datx$x = 1:nrow(datx)
form = Discovered ~ x + Intercept
bru_mod = bru(form, datx, family = "poisson")
summary(bru_mod)
# predict field for each year
x4pred = data.frame(x = 1:nrow(datx))
predx_bru1 = predict(bru_mod, x4pred, ~ exp(x + Intercept), n.samples=2000)
daty = left_join(datx, predx_bru1)
ggplot() +
geom_point(data = daty, aes(Year, Discovered), size=1, col="grey70", alpha=0.8) +
geom_line(data = daty, aes(Year, median)) +
geom_ribbon(data = daty, aes(Year, ymin=q0.025, ymax=q0.975), fill="skyblue4", alpha=0.25) +
theme_minimal() +
ggtitle(Hmisc::capitalize(daty$Host[1])) +
#ylab("Number of viruses discovered") +
ylab(expression(lambda)) +
xlab("Year") +
theme(plot.title=element_text(size=14, hjust=0.5),
axis.title.y = element_text(size=14),
axis.title.x = element_text(size=12),
axis.text = element_text(size=11))
head(curves)
datx = curves %>%
dplyr::group_by(HostOrder, Year) %>%
dplyr::summarise(Discovered = sum(Discovered))
# formula: linear effect of year + intercept
datx$x = 1:nrow(datx)
form = Discovered ~ x + Intercept
bru_mod = bru(form, datx, family = "poisson")
head(datx)
datx = datx[ datx$HostOrder == "Primates", ]
# formula: linear effect of year + intercept
datx$x = 1:nrow(datx)
form = Discovered ~ x + Intercept
bru_mod = bru(form, datx, family = "poisson")
summary(bru_mod)
# predict field for each year
x4pred = data.frame(x = 1:nrow(datx))
predx_bru1 = predict(bru_mod, x4pred, ~ exp(x + Intercept), n.samples=2000)
daty = left_join(datx, predx_bru1)
ggplot() +
geom_point(data = daty, aes(Year, Discovered), size=1, col="grey70", alpha=0.8) +
geom_line(data = daty, aes(Year, median)) +
geom_ribbon(data = daty, aes(Year, ymin=q0.025, ymax=q0.975), fill="skyblue4", alpha=0.25) +
theme_minimal() +
ggtitle(Hmisc::capitalize(daty$Host[1])) +
ylab(expression(lambda)) +
xlab("Year") +
theme(plot.title=element_text(size=14, hjust=0.5),
axis.title.y = element_text(size=14),
axis.title.x = element_text(size=12),
axis.text = element_text(size=11))
head(daty)
ggplot() +
geom_point(data = daty, aes(Year, Discovered), size=1, col="grey70", alpha=0.8) +
geom_line(data = daty, aes(Year, median)) +
geom_ribbon(data = daty, aes(Year, ymin=q0.025, ymax=q0.975), fill="skyblue4", alpha=0.25) +
theme_minimal() +
#ggtitle(Hmisc::capitalize(daty$Host[1])) +
ylab(expression(lambda)) +
xlab("Year") +
theme(plot.title=element_text(size=14, hjust=0.5),
axis.title.y = element_text(size=14),
axis.title.x = element_text(size=12),
axis.text = element_text(size=11))
# formula: linear effect of year + intercept > 1995
datx = datx[ datx$Year >= 1995 ,]
datx$x = 1:nrow(datx)
form = Discovered ~ x + Intercept
bru_mod = bru(form, datx, family = "poisson")
summary(bru_mod)
# predict field for each year
x4pred = data.frame(x = 1:nrow(datx))
predx_bru1 = predict(bru_mod, x4pred, ~ exp(x + Intercept), n.samples=2000)
daty = left_join(datx, predx_bru1)
ggplot() +
geom_point(data = daty, aes(Year, Discovered), size=1, col="grey70", alpha=0.8) +
geom_line(data = daty, aes(Year, median)) +
geom_ribbon(data = daty, aes(Year, ymin=q0.025, ymax=q0.975), fill="skyblue4", alpha=0.25) +
theme_minimal() +
#ggtitle(Hmisc::capitalize(daty$Host[1])) +
#ylab("Number of viruses discovered") +
ylab(expression(lambda)) +
xlab("Year") +
theme(plot.title=element_text(size=14, hjust=0.5),
axis.title.y = element_text(size=14),
axis.title.x = element_text(size=12),
axis.text = element_text(size=11))
ggplot() +
geom_point(data = daty, aes(Year, Discovered), size=1, col="grey70", alpha=0.8) +
geom_line(data = daty, aes(Year, median)) +
geom_ribbon(data = daty, aes(Year, ymin=q0.025, ymax=q0.975), fill="skyblue4", alpha=0.25) +
theme_minimal() +
#ggtitle(Hmisc::capitalize(daty$Host[1])) +
ylab(expression(lambda)) +
xlab("Year") +
theme(plot.title=element_text(size=14, hjust=0.5),
axis.title.y = element_text(size=14),
axis.title.x = element_text(size=12),
axis.text = element_text(size=11))
ocurves = curves %>%
dplyr::group_by(HostOrder, Year) %>%
dplyr::summarise(Discovered = sum(Discovered))
warnings()
head(curves)
